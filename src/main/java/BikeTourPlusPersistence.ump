class BikeTourPlus {
  public void reinitialize() {
    User.reinitializeUniqueEmail(getUsers());
    BookableItem.reinitializeUniqueName(getBookableItems());
    Lodge.reinitializeUniqueName(getLodges());
    BikeTour.reinitializeUniqueId(getBikeTours());
  }

  private List<User> getUsers() {
    List<User> users = new ArrayList<User>();
    users.addAll(getParticipants());
    users.addAll(getGuides());
    if(getManager() != null){
      users.add(getManager());
    }
    return users;
  }

  private List<BookableItem> getBookableItems() {
    List<BookableItem> bookableItems = new ArrayList<BookableItem>();
    bookableItems.addAll(getGear());
    bookableItems.addAll(getCombos());
    return bookableItems;
  }

}

class User {
    public static void reinitializeUniqueEmail(List<User> users) {
    usersByEmail.clear();
    for (var user : users) {
      usersByEmail.put(user.getEmail(), user);
    }
  }
}

class BookableItem {
    public static void reinitializeUniqueName(List<BookableItem> bookableItems) {
    bookableitemsByName.clear();
    for (var bookableItem : bookableItems) {
      bookableitemsByName.put(bookableItem.getName(), bookableItem);
    }
  }
}

class Lodge {
    public static void reinitializeUniqueName(List<Lodge> lodges) {
    lodgesByName.clear();
    for (var lodge : lodges) {
      lodgesByName.put(lodge.getName(), lodge);
    }
  }
}

class BikeTour {
    public static void reinitializeUniqueId(List<BikeTour> bikeTours) {
    biketoursById.clear();
    for (var bikeTour : bikeTours) {
      biketoursById.put(bikeTour.getId(), bikeTour);
    }
  }
}